// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton createTournamentButtonButton;

  @NonNull
  public final EditText groupName;

  @NonNull
  public final EditText mem1;

  @NonNull
  public final EditText mem2;

  @NonNull
  public final EditText mem3;

  @NonNull
  public final EditText mem4;

  @NonNull
  public final Toolbar toolBarCreateTournamentActivity;

  private ActivityGroupBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton createTournamentButtonButton, @NonNull EditText groupName,
      @NonNull EditText mem1, @NonNull EditText mem2, @NonNull EditText mem3,
      @NonNull EditText mem4, @NonNull Toolbar toolBarCreateTournamentActivity) {
    this.rootView = rootView;
    this.createTournamentButtonButton = createTournamentButtonButton;
    this.groupName = groupName;
    this.mem1 = mem1;
    this.mem2 = mem2;
    this.mem3 = mem3;
    this.mem4 = mem4;
    this.toolBarCreateTournamentActivity = toolBarCreateTournamentActivity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createTournamentButton_Button;
      AppCompatButton createTournamentButtonButton = rootView.findViewById(id);
      if (createTournamentButtonButton == null) {
        break missingId;
      }

      id = R.id.groupName;
      EditText groupName = rootView.findViewById(id);
      if (groupName == null) {
        break missingId;
      }

      id = R.id.mem1;
      EditText mem1 = rootView.findViewById(id);
      if (mem1 == null) {
        break missingId;
      }

      id = R.id.mem2;
      EditText mem2 = rootView.findViewById(id);
      if (mem2 == null) {
        break missingId;
      }

      id = R.id.mem3;
      EditText mem3 = rootView.findViewById(id);
      if (mem3 == null) {
        break missingId;
      }

      id = R.id.mem4;
      EditText mem4 = rootView.findViewById(id);
      if (mem4 == null) {
        break missingId;
      }

      id = R.id.toolBar_createTournamentActivity;
      Toolbar toolBarCreateTournamentActivity = rootView.findViewById(id);
      if (toolBarCreateTournamentActivity == null) {
        break missingId;
      }

      return new ActivityGroupBinding((ConstraintLayout) rootView, createTournamentButtonButton,
          groupName, mem1, mem2, mem3, mem4, toolBarCreateTournamentActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
