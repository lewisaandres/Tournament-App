// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Profile;

  @NonNull
  public final Button SearchTournament;

  @NonNull
  public final Button Settings;

  @NonNull
  public final Button activeTournament;

  @NonNull
  public final ImageView appLogo;

  @NonNull
  public final TextView email;

  @NonNull
  public final RecyclerView homeTourneyView;

  @NonNull
  public final Button suggestionPageButton;

  @NonNull
  public final TextView tourneyViewText;

  private HomeViewBinding(@NonNull ConstraintLayout rootView, @NonNull Button Profile,
      @NonNull Button SearchTournament, @NonNull Button Settings, @NonNull Button activeTournament,
      @NonNull ImageView appLogo, @NonNull TextView email, @NonNull RecyclerView homeTourneyView,
      @NonNull Button suggestionPageButton, @NonNull TextView tourneyViewText) {
    this.rootView = rootView;
    this.Profile = Profile;
    this.SearchTournament = SearchTournament;
    this.Settings = Settings;
    this.activeTournament = activeTournament;
    this.appLogo = appLogo;
    this.email = email;
    this.homeTourneyView = homeTourneyView;
    this.suggestionPageButton = suggestionPageButton;
    this.tourneyViewText = tourneyViewText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Profile;
      Button Profile = rootView.findViewById(id);
      if (Profile == null) {
        break missingId;
      }

      id = R.id.Search_Tournament;
      Button SearchTournament = rootView.findViewById(id);
      if (SearchTournament == null) {
        break missingId;
      }

      id = R.id.Settings;
      Button Settings = rootView.findViewById(id);
      if (Settings == null) {
        break missingId;
      }

      id = R.id.activeTournament;
      Button activeTournament = rootView.findViewById(id);
      if (activeTournament == null) {
        break missingId;
      }

      id = R.id.appLogo;
      ImageView appLogo = rootView.findViewById(id);
      if (appLogo == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.homeTourneyView;
      RecyclerView homeTourneyView = rootView.findViewById(id);
      if (homeTourneyView == null) {
        break missingId;
      }

      id = R.id.suggestionPageButton;
      Button suggestionPageButton = rootView.findViewById(id);
      if (suggestionPageButton == null) {
        break missingId;
      }

      id = R.id.tourneyViewText;
      TextView tourneyViewText = rootView.findViewById(id);
      if (tourneyViewText == null) {
        break missingId;
      }

      return new HomeViewBinding((ConstraintLayout) rootView, Profile, SearchTournament, Settings,
          activeTournament, appLogo, email, homeTourneyView, suggestionPageButton, tourneyViewText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
