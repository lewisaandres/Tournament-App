// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddGameLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText addGameDescription;

  @NonNull
  public final TextInputEditText addGameName;

  @NonNull
  public final Button doneButton;

  @NonNull
  public final TextView textView;

  private AddGameLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText addGameDescription, @NonNull TextInputEditText addGameName,
      @NonNull Button doneButton, @NonNull TextView textView) {
    this.rootView = rootView;
    this.addGameDescription = addGameDescription;
    this.addGameName = addGameName;
    this.doneButton = doneButton;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddGameLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddGameLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_game_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddGameLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_game_description;
      TextInputEditText addGameDescription = rootView.findViewById(id);
      if (addGameDescription == null) {
        break missingId;
      }

      id = R.id.add_game_name;
      TextInputEditText addGameName = rootView.findViewById(id);
      if (addGameName == null) {
        break missingId;
      }

      id = R.id.done_button;
      Button doneButton = rootView.findViewById(id);
      if (doneButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new AddGameLayoutBinding((LinearLayout) rootView, addGameDescription, addGameName,
          doneButton, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
