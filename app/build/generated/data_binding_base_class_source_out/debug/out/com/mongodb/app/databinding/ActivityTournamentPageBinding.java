// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTournamentPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Join;

  @NonNull
  public final Button joinButton;

  @NonNull
  public final ImageView moneyIcon;

  @NonNull
  public final TextView participantNumber;

  @NonNull
  public final TextView participantText;

  @NonNull
  public final ImageView personIcon;

  @NonNull
  public final TextView prizeAmount;

  @NonNull
  public final RecyclerView recyclerViewTourneyPage;

  @NonNull
  public final TextView tournamentGame;

  @NonNull
  public final ImageView tournamentImage;

  @NonNull
  public final TextView tournamentName;

  private ActivityTournamentPageBinding(@NonNull LinearLayout rootView, @NonNull TextView Join,
      @NonNull Button joinButton, @NonNull ImageView moneyIcon, @NonNull TextView participantNumber,
      @NonNull TextView participantText, @NonNull ImageView personIcon,
      @NonNull TextView prizeAmount, @NonNull RecyclerView recyclerViewTourneyPage,
      @NonNull TextView tournamentGame, @NonNull ImageView tournamentImage,
      @NonNull TextView tournamentName) {
    this.rootView = rootView;
    this.Join = Join;
    this.joinButton = joinButton;
    this.moneyIcon = moneyIcon;
    this.participantNumber = participantNumber;
    this.participantText = participantText;
    this.personIcon = personIcon;
    this.prizeAmount = prizeAmount;
    this.recyclerViewTourneyPage = recyclerViewTourneyPage;
    this.tournamentGame = tournamentGame;
    this.tournamentImage = tournamentImage;
    this.tournamentName = tournamentName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTournamentPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTournamentPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tournament_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTournamentPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Join;
      TextView Join = rootView.findViewById(id);
      if (Join == null) {
        break missingId;
      }

      id = R.id.joinButton;
      Button joinButton = rootView.findViewById(id);
      if (joinButton == null) {
        break missingId;
      }

      id = R.id.moneyIcon;
      ImageView moneyIcon = rootView.findViewById(id);
      if (moneyIcon == null) {
        break missingId;
      }

      id = R.id.participantNumber;
      TextView participantNumber = rootView.findViewById(id);
      if (participantNumber == null) {
        break missingId;
      }

      id = R.id.participantText;
      TextView participantText = rootView.findViewById(id);
      if (participantText == null) {
        break missingId;
      }

      id = R.id.personIcon;
      ImageView personIcon = rootView.findViewById(id);
      if (personIcon == null) {
        break missingId;
      }

      id = R.id.prizeAmount;
      TextView prizeAmount = rootView.findViewById(id);
      if (prizeAmount == null) {
        break missingId;
      }

      id = R.id.recyclerViewTourneyPage;
      RecyclerView recyclerViewTourneyPage = rootView.findViewById(id);
      if (recyclerViewTourneyPage == null) {
        break missingId;
      }

      id = R.id.tournamentGame;
      TextView tournamentGame = rootView.findViewById(id);
      if (tournamentGame == null) {
        break missingId;
      }

      id = R.id.tournamentImage;
      ImageView tournamentImage = rootView.findViewById(id);
      if (tournamentImage == null) {
        break missingId;
      }

      id = R.id.tournamentName;
      TextView tournamentName = rootView.findViewById(id);
      if (tournamentName == null) {
        break missingId;
      }

      return new ActivityTournamentPageBinding((LinearLayout) rootView, Join, joinButton, moneyIcon,
          participantNumber, participantText, personIcon, prizeAmount, recyclerViewTourneyPage,
          tournamentGame, tournamentImage, tournamentName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
