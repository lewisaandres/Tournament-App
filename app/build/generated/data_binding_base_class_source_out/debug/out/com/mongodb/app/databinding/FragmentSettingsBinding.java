// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonChangePass;

  @NonNull
  public final Button buttonEditProfile;

  @NonNull
  public final Button buttonHelp;

  @NonNull
  public final Button buttonLogout;

  @NonNull
  public final Toolbar toolBarSettings;

  private FragmentSettingsBinding(@NonNull LinearLayout rootView, @NonNull Button buttonChangePass,
      @NonNull Button buttonEditProfile, @NonNull Button buttonHelp, @NonNull Button buttonLogout,
      @NonNull Toolbar toolBarSettings) {
    this.rootView = rootView;
    this.buttonChangePass = buttonChangePass;
    this.buttonEditProfile = buttonEditProfile;
    this.buttonHelp = buttonHelp;
    this.buttonLogout = buttonLogout;
    this.toolBarSettings = toolBarSettings;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_change_pass;
      Button buttonChangePass = rootView.findViewById(id);
      if (buttonChangePass == null) {
        break missingId;
      }

      id = R.id.button_edit_profile;
      Button buttonEditProfile = rootView.findViewById(id);
      if (buttonEditProfile == null) {
        break missingId;
      }

      id = R.id.button_help;
      Button buttonHelp = rootView.findViewById(id);
      if (buttonHelp == null) {
        break missingId;
      }

      id = R.id.button_logout;
      Button buttonLogout = rootView.findViewById(id);
      if (buttonLogout == null) {
        break missingId;
      }

      id = R.id.toolBar_Settings;
      Toolbar toolBarSettings = rootView.findViewById(id);
      if (toolBarSettings == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((LinearLayout) rootView, buttonChangePass,
          buttonEditProfile, buttonHelp, buttonLogout, toolBarSettings);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
