// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GameDetailActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView gameDetailDescription;

  @NonNull
  public final ImageView gameDetailImage;

  @NonNull
  public final TextView gameDetailName;

  @NonNull
  public final AppCompatButton removeButton;

  private GameDetailActivityBinding(@NonNull LinearLayout rootView,
      @NonNull TextView gameDetailDescription, @NonNull ImageView gameDetailImage,
      @NonNull TextView gameDetailName, @NonNull AppCompatButton removeButton) {
    this.rootView = rootView;
    this.gameDetailDescription = gameDetailDescription;
    this.gameDetailImage = gameDetailImage;
    this.gameDetailName = gameDetailName;
    this.removeButton = removeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GameDetailActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GameDetailActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.game_detail_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GameDetailActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.game_detail_description;
      TextView gameDetailDescription = rootView.findViewById(id);
      if (gameDetailDescription == null) {
        break missingId;
      }

      id = R.id.game_detail_image;
      ImageView gameDetailImage = rootView.findViewById(id);
      if (gameDetailImage == null) {
        break missingId;
      }

      id = R.id.game_detail_name;
      TextView gameDetailName = rootView.findViewById(id);
      if (gameDetailName == null) {
        break missingId;
      }

      id = R.id.remove_button;
      AppCompatButton removeButton = rootView.findViewById(id);
      if (removeButton == null) {
        break missingId;
      }

      return new GameDetailActivityBinding((LinearLayout) rootView, gameDetailDescription,
          gameDetailImage, gameDetailName, removeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
