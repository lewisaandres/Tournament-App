// Generated by view binder compiler. Do not edit!
package com.mongodb.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.mongodb.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TournamentDetailViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView background;

  @NonNull
  public final ImageView gameImage;

  @NonNull
  public final Button joinButton;

  @NonNull
  public final TextView prizePool;

  @NonNull
  public final TextView tournamentDate;

  @NonNull
  public final TextView tournamentName;

  private TournamentDetailViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView background, @NonNull ImageView gameImage, @NonNull Button joinButton,
      @NonNull TextView prizePool, @NonNull TextView tournamentDate,
      @NonNull TextView tournamentName) {
    this.rootView = rootView;
    this.background = background;
    this.gameImage = gameImage;
    this.joinButton = joinButton;
    this.prizePool = prizePool;
    this.tournamentDate = tournamentDate;
    this.tournamentName = tournamentName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TournamentDetailViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TournamentDetailViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tournament_detail_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TournamentDetailViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      TextView background = rootView.findViewById(id);
      if (background == null) {
        break missingId;
      }

      id = R.id.game_image;
      ImageView gameImage = rootView.findViewById(id);
      if (gameImage == null) {
        break missingId;
      }

      id = R.id.join_button;
      Button joinButton = rootView.findViewById(id);
      if (joinButton == null) {
        break missingId;
      }

      id = R.id.prize_pool;
      TextView prizePool = rootView.findViewById(id);
      if (prizePool == null) {
        break missingId;
      }

      id = R.id.tournament_date;
      TextView tournamentDate = rootView.findViewById(id);
      if (tournamentDate == null) {
        break missingId;
      }

      id = R.id.tournament_name;
      TextView tournamentName = rootView.findViewById(id);
      if (tournamentName == null) {
        break missingId;
      }

      return new TournamentDetailViewBinding((ConstraintLayout) rootView, background, gameImage,
          joinButton, prizePool, tournamentDate, tournamentName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
